load_support('dflipflop'); use_bpm 127.0
#dragon_cc detune: 0.5
#pluck detune: 0.5
spad_cc filter: 0.15*1
#pluck_cc pulse: 1.0

alive dragon: 0, hpad: 1, spad: 0,
glitch: 0,
bass: 0, derbass: 0, twinebass: 0

pluck_cc wash: 0.2
#alive wpiano: 0, piano: 0, piano_echos: 0, pluck: 1
alive wpiano: 1, piano: 0, piano_echos: 0
wpiano_cc wash: 0.0

live_loop :start, sync: :unsyncable do
  tick
  if spread(1,32).rot(-6).look
    #glitch :cs3, 65
  end
  if spread(15,16).look
    #glitch :c3, (ing 78 62 68 61).look
  end
  #pluck_cc pulse: (ing 0.0 0.0 0.0 1.0  1.0 1.0 1.0 1.0).look
  #pluck_cc wash: (ing 0.0 1.0 0.0 0.0).look #nice riser
  #pluck_cc wash: (ing 1.0 0.3).look #nice riser

  mscore = (ing
#-----------
    [[:c3 :Eb4  :G3 :as4] 4]
    [[:c3 :Eb4  :G4 :bb4] 4]
    # [[:eb5] 8]

    # [[:c3  :Eb4 :G3 :as4] 4]
    # [[:c3  :Eb4 :G4 :bb4] 4]
    # [[:ab2 :eb4 :c3] 4]
    # [[:bb2 :d4 :f3 :Ab3 ] 4]
    # [[:bb2 :d3 :f3 :Ab3 ] 4]

    #[[:f3 :ab4 :c4] 4]
    # [[:F3 :D4 :Ab4] 4]
    # [[[:Bb3 :D4 :F4] 4] [[:G3 :Bb4 :D4] 4]].choose
    # [[:ab2 :Eb4 :G4 :Bb4] 4]

#--------

    # [[:c3 :eb4 :G3 :Bb4] 4]
    # [[:f3 :ab4 :c4] 4]
    # [[:Ab3 :C5 :eb4] 4]
    # [[:ab3 :Bb5 :eb4] 4]

    # [[:c3 :eb4 :G3 :Bb4] 4]
    # [[:f3 :ab4 :c4 ] 4]
    # [[:Ab3 :D5 :eb4] 4]
    # [[:ab3 :c5 :eb4] 4]

    # [[:c4 :d4 :G4 :bb4] 4]
    # [[:f3 :ab4 :c4] 4]
    # [[:g3 :eb4 :bb4] 4]
    # [[:ab3 :c4 :eb4] 4]

    # #[[:ab3 :c4 :eb4] 4]

    # [[:c4 :eb4 :G3 :Bb4] 4]
    # [[:f3 :ab4 :c4] 4]
    # [[:Ab3 :C5 :eb4] 4]
    # [[:ab3 :Bb5 :eb4] 4]

    # [[:c3 :eb4 :G3 :Bb4] 4]
    # [[:f3 :ab4 :c4 ] 4]
    # [[:Ab3 :D5 :eb4] 4]
    # [[:ab3 :c5 :eb4] 4]


    # [[:c4 :eb4 :G4 :Bb4] 4]
    # [[:f3 :ab4 :c4] 4]
    # [[:bb3 :c5 :f4 :ab4] 4]
    # [[[:bb3 :d5 :f4 :ab4] 8] [[:Ab3 :C5 :eb4 :g4] 8]].choose

#Chorus
#----------
    # [[:Eb3 :G4 [:bb3 :bb3].choose :d4] 4]
    # [[:F3 :Ab4 :C3 :Eb4] 2]
    # [[:Eb3 :G4 [:bb3 :bb3].choose :d4] 2]
    # [[:Eb3 :G4 [:bb4 :bb4].choose] 4]
    # [[:F3 :Ab4 :C4 :Eb4] 2]
    # [[:Eb3 :ab4 [:bb4 :bb4].choose] 2]
    # [[:Eb3 :ab4 [:bb4 :bb4].choose] 4]

# -----------
    # [[:Eb3 :G4 [:bb3 :bb3].choose] 4]
    # [[:F3 :Ab4 :C3] 4]
    # [[:Eb3 :G4 [:bb4 :bb4].choose] 4]
    # [[:F3 :Ab4 :C4] 4]

    # [[:Bb3 :G3 :Eb4 ] 8]   # GEB
    # [[:ab3 :c4 :eb3] 4]
    # [[:ab3 :c4 :Eb4 :f4] 4]
    # [[:bb3 :D4 :F4] 8]


    # [[:G3 :Eb4 [:bb3 :bb3].choose] 4]
    # [[:Ab3 :F4 :C4] 4]
    # [[:G3 :Eb4  [:ab4 :ab4].choose] 4]
    # [[[:c3 :eb4 :g3] 4] [[:Ab3 :F4 :C4] 4]].choose

    # [[:Bb3 :D4 :F4 ] 8]
    # [[:ab3 :c4 :eb4] 4]
    # [[:F3 :Ab4 :C4] 4]
    # [[:c3 :d4 :g3] 8]

#---------------------------
    #Bb Ds F Ab
    # [[:c3 :eb4 :G3 :Bb4] 4]
    # [[:f3 :ab4 :c4] 4]
    # [[:bb2 :ds4 :f4 :ab4] 4]
    # [[:Ab3 :D4 :eb4] 4]
    # [[:f3  :ab5 :c5 :eb5] 4]
    # [[_] 2]

    # LIKE IT
    #[[:Ab3 :D4 :eb4] 4]                   # 6 -> 4
    # #[[:c3 :D4   :G3  :as4] 4]
    #[[:f3  [:ab5 :ab6 :g5].choose :c5 :eb5] 4]
    #[[:f3 :d4 :ab3] 4]

    #---------------------------------------

    #NICE SLOW DOWN -
    # [[:c4 :Eb4  :G3 :ab4] 4]
    # [[:f3] 8]
    # [[:ab3] 4]
#    [[_] 2]

    )
  #tick_reset_all
  score = mscore.look
  zzz   = score[-1]
  score = score[0]

  if spread(1,8).look
    #  #ab => eb  bb* => f    #c=>g   (#d => a) out   #eb => Bb  #g=>d  f=>c
    #hpad piano: 1.0
    hpad octave(score[1],3), sus: 4*zzz
    spad octave(score[1],3), sus: 4*zzz

    #hpad :, 127, sus: 32, motion: 1, fx: 0, tone: 0, pitch: 0
    #spad :d4, 110, sus: 4*zzz
    #spad :eb4, 110, sus: 4*zzz

    #hpad (ing :eb4).tick(:in), 127, sus: 12
    #hpad (ing :d4).tick(:in), 127, sus: 12

    puts "----------------------->8bars"
    piano_echos [:ab4, :G4].choose, [120,95].choose, sus: 4.0
    no{
    at{
      sleep 4
      piano_echos :ab4, 122, sus: 4.0
      sleep 4
      piano_echos :f5, 122, sus: 4.0
      }
    }
  else
    #spad octave(score[1],3), sus: 4*zzz
  end

  d = (ring spread(7,11),spread(7,11),spread(7,11), spread(3,8)).look

  yes{
    at{
      sleep 2
      piano_echos :Eb5, 126, sus: 4 if score[0] == :Eb3 if d
      sleep 1/2.0
      piano_echos [:C6, :G6].choose, 120, sus: 4 if score[0] == :F3
      sleep (1/2.0/2.0) if d
      piano_echos :Eb6, 110, sus: 4 if score[0] == :Eb3
    }
  }

  bass_cc delay: 0.2, dirt: 0.2, noise: 0.3, more: (ing 1.0 1.0 1.0 0.0).look

  yes{
  at{
    (zzz*1.0).times{
      bass_cc more: (ing 1.0 0.0 0.0).look(:in), dirt: (line 0.5, 0.2, zzz*2).look(:in)
      with_transpose -12*0{
        bass root(score), (ing 95 60 82 65).look(:in), sus: 2.0 if d.tick(:in)
      }
      sleep 1
    }
    }
  }

  puts "SCORE: #{score}"

  # at{
  #   pluck_cc pulse: 0.01
  #   4.times{
  #     sleep 1.0
  #     #puts (line 0, -0.125,8).look(:in)
  #     with_swing ((line 0, -0.125,8).tick(:in)){
  #       pluck score[0]+12,110, sus: 1.0
  #     }
  #     bass score[0]
  #   }
  # }

  at{
    pluck score[-1],100, sus: zzz
    sleep 1/2.0
    with_transpose 0{
      pluck_cc ryth: 1.0
      pluck score[-2], sus: 2
    }
    sleep 2
    sleep 0.5
    pluck score[-3], sus: 1
  }


  at{
    sleep 2
    piano score[1], 85, sus: 1
    sleep 1
    piano score[0], 95, sus: 1
  }
  #end

  wpiano score[0], 100, sus: 3.5

  sleep zzz / 4.0
  #with_swing ((line 0.0, -0.05,9).look){
  #  zero score[0]+12,127, detune: 0.5, sus: 2
  #}
  sleep zzz / 4.0

  score2 = (ing
    [:c2 :C3].choose
    [:f4 :c4].choose
    [:Ab3 :G4].choose
    _

    #EXTRA
    # [:c2 :C3].choose
    # [:f4 :ab4].choose
    # [:Ab3 :G4].choose
    # _

    # [:c2 :C3].choose
    # [:f4 :c4].choose
    # [:Ab3 :G4].choose
    # _

    # [:c2 :C3].choose
    # [:f4 :d4].choose
    # [:eb3 :G4].choose
    # _

    ).look

  if score2 == _
    puts "#{zzz} HIT"
    dragon_cc filter: 0.01
    wpiano [:c5, :eb5, :g5].choose,100, sus: zzz+2
  else
    dragon_cc filter: 0.01
  end

  with_transpose 12*1{
    dragon_cc more: 0.1
    #dragon_cc more: (line 0.9, 1.0, 128).look
    #dragon score2, (ing 100 80 70).look*0.75, sus: (2.5+2)
    dragon :f2, (ing 100 80 70).look*0.8, sus: (2.5+2)
  }

  with_transpose 12{
    piano mscore.look(offset: 1)[0][-1], 75, sus: 2
  }

  twinebass octave(score[0],5), 60 if spread(2,3).rot(-1).look
  sleep (zzz / 4.0 / 2.0)

  if spread(2,3).look
    with_swing ((line 0, -0.1, 8*2).look){
      twinebass octave(score[0],5), 68
    }
  end

  with_transpose 12{
    piano mscore.look(offset: 1)[0][1], 85, sus: 2
  }

  if spread(1,2).look
     glitch :c3, 60
  end

  sleep (zzz / 4.0 / 2.0)

  if spread(7,11).look
    glitch :d3, 75+rand*2.0
  else
    at{
      sleep 1/2.0
      glitch :e3, 75
    }
  end

  if spread(1,3).look
    with_transpose 12*2{
      #piano :f3, 100, sus: 1
    }
  end
  at{
    sleep 1/2.0
    with_transpose 12*3{
      #piano [:c3, :eb3].choose, 115, sus: 1
    }
  }

  if spread(1,4).look
    with_transpose 12{
      piano mscore.look(offset: 1)[0][0], 95, sus: 5
    }
  end

  sleep (zzz / 4.0)

end

live_loop :control, sync: :start do
  tick
  dragon_cc pulse: ((line 0, 1.0, 128).look+(line 1.0, 0.0, 128).look)
  dragon_cc filter: 0.1
  sleep 1/2.0
end

live_loop(:unsyncable) do;  sleep 1.0;end

sync :start
#hpad_x

#hpad_on :f6, 100
#hpad_on :d6, 100
#hpad_on :bb5, 52, off: :ab6

#hpad_on :ab6, 50, off: :bb5
#hpad_on :bb5, 52, off: :ab6
#hpad_on :eb6, 52, off: :bb5
