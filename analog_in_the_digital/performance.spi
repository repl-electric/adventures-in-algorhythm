load_support('analog_in_the_digital'); use_bpm 127/2.0
live_loop(:unsyncable) do; sleep 1.0;end
#scene 1
#world time: 1

#stop
#glitch_cc mode: 0

live_loop :form, sync: :unsyncable do
  tick

  puts chord(:a, :m).map{|n| note_inspect(n)}

  score = (ing

    #P1
    # [:e3   :g4  :b3     :fs3]
    # [:e3   :g4  :b3      _]
    # [:e3   :g4  :b3     :fs3]


    # [:d3   :fs4  _      :a3]
    # [:g3   :b4   _      :d3]
    # [:a3   :c4   _      :e4]
    # [:a3   :c4   _      :e4]

    # [:a3   :c3   :fs4   :e4]
    # [:d3   :fs4  [:E4].choose :cs5]


    #P2
    [:e3   :g4  :b3     :fs3]
    [:e3   :g4  :b3      _]
    [:e3   :g4  :b3     :fs3]
    [:e3   :g4  [:d4 :e4].choose    _]

    #[:d3   :fs4  _      :a3]
    #[:d3   :fs4  _      :a3]
    #[:d3   :fs4  _      :a3]
    #[:g3   :b4   :a4    :d3]
    #[:a3   :c4   :a3    :e4]



    # [:g3   :b4   _      :d3]
    # [:a3   :c4   _      :e4]
    # [:a3   :c4   _      :e4]
    # [:c3   :f4   _     :g4]
    # [:c3   :e4   :A4    :g4]


    ).look

  puts score

  #glitch :C3, 85

  if score[0] == _
    #vox :e2, sus:2.0
  else
    with_transpose 12{
      #vox root(score), sus:2.0
    }
  end
  #end

  with_transpose 0{
    at{
      bass root(score),120, sus: 2.5*2
      #midi :e3, channel: 4, sustain: 4, sus: 2
      sleep 3.0
      #midi :e5,127, channel: 4, sustain: 4, sus: 2
      sleep 0.5
      bass root(score),105, sus: 0.5
      }
  }

  with_transpose 0{
    s = (ing
      [:a4 :a4]
      [:fs5 _ :fs5]
      [:a3 :b4 :b5]
      [:a4 :cs4 :Cs5]
      [:fs4 :fs4]
      [:gs4 :gs4]
      [:e5 :e4]

      [:e4 :e5]
      [:ds4]
      [:fs4]
      [:cs4]
      [:gs4]
      [:es4]
      [:e4 :e5 :e4 :e4]
      ).look
    at{
      sleep 1.5
      s.each{|n|
        with_swing 0.02{
          #midi n, (ing 80 60 50).look,  sus: 0.25,  channel: 6# if spread(7,11).tick(:n1)
        }
        sleep 0.25
      }
    }
  }

  if true#(ing 1 1 0 0 1 1 1).look == 1

  #if (ing 1 1).look == 1
    #if (ing 1 1 0 1 1 1).look == 1

    vox   score[0],   sus: 1.5         #0
    looper score[0],  sus: 1.5
    #vox   score[1],     sus:3.5
    #vox  score[2], 80,  sus:1.5
    #vox  score[3], 80,  sus:3.5
    with_transpose 12{
      #piano score[1],62,sus:2
    }
    sleep 1/2.0
    sleep 1/2.0

    #piano score[1], 60, sus:2  if spread(1,2).look
    with_transpose 12{
      #piano score[1], 62, sus:2
    }

    vox    score[3], 80,  sus: 2.5    # 3
    looper score[3], 80,  sus: 2.5, pat: 1/8.0         #0

    puts score[3]

    sleep 1/2.0
    #glitch :f3, 60
    sleep 1/2.0

    #glitch :as3,50
    sleep 1/2.0

    #glitch :e3, 60+rand*5 if spread(1,2).look
    sleep 1/2.0
    #glitch :d3, 60+rand*5 if spread(1,2).rot(-1).look
    sleep 1/2.0

    midi score[2], 50,  sus:4,  channel: 5     #2

    #glitch :fs3, 60+rand*5 if spread(2,3).look
    sleep 1/4.0
    #glitch :fs3, 70+rand*5 if spread(4,5).look
    sleep 1/4.0
  else
    vox score[0],       sus:2
    #vox score[1],       sus:1
    #vox score[2], 80,   sus:1
    with_transpose 12{
      piano score[1],82, sus:1
    }
    sleep 1/2.0
    with_transpose 12{
      piano score[1],60, sus:1
    }

    glitch :a3,40
    sleep 1/4.0
    sleep 1/4.0

    piano score[1],82, sus:1
    sleep 1/2.0
    glitch :C3, 50
    glitch :fs3,70
    sleep 1/4.0
    glitch :a3,127
    sleep 1/4.0
  end
end
